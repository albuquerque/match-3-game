name: Multi-Platform Build (Godot)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: match3-game

jobs:
  build:
    strategy:
      matrix:
        platform: [linux, macos, windows]
        include:
          - platform: linux
            runner: ubuntu-latest
            preset: "Linux/X11"
            filename: "match3-game.x86_64"
            path: "build/linux/"
          - platform: macos
            runner: macos-latest
            preset: "macOS"
            filename: "match3-game.zip"
            path: "build/mac/"
          - platform: windows
            runner: windows-latest
            preset: "Windows Desktop"
            filename: "match3-game.exe"
            path: "build/windows/"

    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Godot Assets
        id: cache-godot
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/godot/export_templates
            ~/godot
          key: godot-${{ env.GODOT_VERSION }}-${{ matrix.platform }}

      - name: Download Godot Headless + Export Templates (if needed)
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          if [[ "${{ matrix.platform }}" == "linux" ]]; then
            curl -fSL -o godot_headless.zip "https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_linux.x86_64.zip"
            unzip -q godot_headless.zip
            mv Godot_v4.3-stable_linux.x86_64 ~/godot
          elif [[ "${{ matrix.platform }}" == "macos" ]]; then
            curl -fSL -o godot_headless.zip "https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_macos.universal.zip"
            unzip -q godot_headless.zip
            mv Godot.app/Contents/MacOS/Godot ~/godot
          else
            curl -fSL -o godot_headless.zip "https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_win64.exe.zip"
            unzip -q godot_headless.zip
            mv Godot_v4.3-stable_win64.exe ~/godot.exe
          fi
          
          chmod +x ~/godot* || true
          
          curl -fSL -o templates.tpz "https://github.com/godotengine/godot/releases/download/4.3-stable/Godot_v4.3-stable_export_templates.tpz"
          mkdir -p ~/.local/share/godot/export_templates/4.3.stable
          unzip -q templates.tpz -d /tmp/templates_extracted
          mv /tmp/templates_extracted/templates/* ~/.local/share/godot/export_templates/4.3.stable/

      - name: Export ${{ matrix.platform }} Build
        run: |
          mkdir -p ${{ matrix.path }}
          
          if [[ "${{ matrix.platform }}" == "windows" ]]; then
            ~/godot.exe --headless --export-debug "${{ matrix.preset }}" "${{ matrix.path }}${{ matrix.filename }}"
          else
            ~/godot --headless --export-debug "${{ matrix.preset }}" "${{ matrix.path }}${{ matrix.filename }}"
          fi
          
          if [ -f "${{ matrix.path }}${{ matrix.filename }}" ]; then
            echo "‚úÖ ${{ matrix.platform }} build completed!"
            ls -lh ${{ matrix.path }}
          else
            echo "‚ùå ${{ matrix.platform }} build failed"
            exit 1
          fi

      - name: Upload ${{ matrix.platform }} Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: ${{ matrix.path }}${{ matrix.filename }}

  release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.GODOT_VERSION }}-${{ github.run_number }}
          name: Multi-Platform Build ${{ env.GODOT_VERSION }} (Run ${{ github.run_number }})
          body: |
            Automated multi-platform export generated by CI.
            
            **Platforms included:**
            - üêß Linux (x86_64)
            - üçé macOS (Universal)
            - ü™ü Windows (x64)
            
            **Build info:**
            - Godot Version: ${{ env.GODOT_VERSION }}
            - Commit: ${{ github.sha }}
            - Build Number: ${{ github.run_number }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
